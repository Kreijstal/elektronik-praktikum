* Hello
.include logic.lib
.subckt 4081B A1 B1 Y1 Y2 A2 B2 VSS A3 B3 Y3 Y4 A4 B4 VDD
XAND1 A1 B1 Y1 VDD VSS T_AND
XAND2 A2 B2 Y2 VDD VSS T_AND
XAND3 A3 B3 Y3 VDD VSS T_AND
XAND4 A4 B4 Y4 VDD VSS T_AND
.ends 4081B


.subckt nand3x3 A1 B1 A2 B2 C2 Y2 VSS C1 Y1 Y3 A3 B3 C3 VDD
XNAND3_1 A1 B1 C1 Y1 VDD VSS T_NAND3
XNAND3_2 A2 B2 C2 Y2 VDD VSS T_NAND3
XNAND3_3 A3 B3 C3 Y3 VDD VSS T_NAND3
.ends nand3x3

.subckt D_flip_flop_setbar_resetbar resetbar setbar data clock q qbar VDD VSS
XU2 conn1 clock conn2 clock conn3 conn4 VSS resetbar conn2 conn3 conn4 data resetbar VDD nand3x3
XU1 setbar conn2 q conn4 resetbar qbar VSS qbar q conn1 setbar conn3 conn2 VDD nand3x3
.ends D_flip_flop_setbar_resetbar

* D Flip-Flop with Set and Reset flipped using NOT gates
.subckt D_flip_flop_set_reset set reset data clock q qbar VDD VSS

XNOT_set set set_inverted VDD VSS T_NOT
XNOT_reset reset reset_inverted VDD VSS T_NOT
XDF_flip_flop set_inverted reset_inverted data clock q qbar VDD VSS D_flip_flop_setbar_resetbar

.ends D_flip_flop_set_reset

.subckt CD4013Bm Q1 Q1N CLOCK1 RESET1 D1 SET1 VSS SET2 D2 RESET2 CLOCK2 Q2N Q2 VDD

XDFF1 SET1 RESET1 D1 CLOCK1 Q1 Q1N VDD VSS D_flip_flop_setbar_resetbar
XDFF2 SET2 RESET2 D2 CLOCK2 Q2 Q2N VDD VSS D_flip_flop_setbar_resetbar

.ends CD4013Bm


